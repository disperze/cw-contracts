name: Rust-CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always


jobs:

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: wasm32-unknown-unknown
          override: true
          components: llvm-tools-preview

      - name: Install grcov
        run: curl -L https://github.com/mozilla/grcov/releases/latest/download/grcov-linux-x86_64.tar.bz2 | tar jxf -

      - name: Run unit tests
        run: |
          cargo build --verbose
          LLVM_PROFILE_FILE="cw-wjuno-%p-%m.profraw" cargo test --verbose
          ./grcov . --binary-path ./target/debug/ -s . -t lcov --branch --ignore-not-existing --ignore "/*" -o lcov.info
          bash <(curl -s https://codecov.io/bash) -f lcov.info
        env:
          RUSTFLAGS: "-Zinstrument-coverage"

      - name: Compile WASM contract
        uses: actions-rs/cargo@v1
        with:
          command: wasm
          args: --locked
        env:
          RUSTFLAGS: "-C link-arg=-s"

  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

      # TODO: we should check
      # CHANGES_IN_REPO=$(git status --porcelain)
      # after this, but I don't know how
      - name: Generate Schema
        uses: actions-rs/cargo@v1
        with:
          command: schema
          args: --locked
